{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\n\nclass CanvasState {\n  constructor() {\n    this.canvas = null;\n    this.undoList = [];\n    this.redoList = [];\n    makeAutoObservable(this);\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n  }\n\n  pushToUndo(data) {\n    this.undoList.push(data);\n  }\n\n  pushToRedo(data) {\n    this.redoList.push(data);\n  }\n\n  undo() {\n    let ctx = this.canvas.getContext('2d');\n\n    if (this.undoList) {\n      let dataURL = this.undoList.pop();\n      this.redoList.push(dataURL);\n      let img = new Image();\n      img.src = dataURL;\n\n      img.onload = () => {\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      };\n    } else {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }\n\n  redo() {}\n\n}\n\nexport default new CanvasState();","map":{"version":3,"names":["makeAutoObservable","CanvasState","constructor","canvas","undoList","redoList","setCanvas","pushToUndo","data","push","pushToRedo","undo","ctx","getContext","dataURL","pop","img","Image","src","onload","clearRect","width","height","drawImage","redo"],"sources":["/Users/vostrymikita/Developer/canvas/src/store/canvasState.js"],"sourcesContent":["import { makeAutoObservable } from 'mobx'\n\nclass CanvasState {\n\n    canvas = null\n    undoList = []\n    redoList = []\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setCanvas(canvas) {\n        this.canvas = canvas\n    }\n\n    pushToUndo(data) {\n        this.undoList.push(data)\n    }\n\n    pushToRedo(data) {\n        this.redoList.push(data)\n    }\n\n    undo() {\n        let ctx = this.canvas.getContext('2d')\n        if (this.undoList) {\n            let dataURL = this.undoList.pop()\n            this.redoList.push(dataURL)\n            let img = new Image()\n            img.src = dataURL\n            img.onload = () => {\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n\n            }\n        } else {\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        }\n    }\n\n    redo() {\n\n    }\n}\n\nexport default new CanvasState()"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;;AAEA,MAAMC,WAAN,CAAkB;EAMdC,WAAW,GAAG;IAAA,KAJdC,MAIc,GAJL,IAIK;IAAA,KAHdC,QAGc,GAHH,EAGG;IAAA,KAFdC,QAEc,GAFH,EAEG;IACVL,kBAAkB,CAAC,IAAD,CAAlB;EACH;;EAEDM,SAAS,CAACH,MAAD,EAAS;IACd,KAAKA,MAAL,GAAcA,MAAd;EACH;;EAEDI,UAAU,CAACC,IAAD,EAAO;IACb,KAAKJ,QAAL,CAAcK,IAAd,CAAmBD,IAAnB;EACH;;EAEDE,UAAU,CAACF,IAAD,EAAO;IACb,KAAKH,QAAL,CAAcI,IAAd,CAAmBD,IAAnB;EACH;;EAEDG,IAAI,GAAG;IACH,IAAIC,GAAG,GAAG,KAAKT,MAAL,CAAYU,UAAZ,CAAuB,IAAvB,CAAV;;IACA,IAAI,KAAKT,QAAT,EAAmB;MACf,IAAIU,OAAO,GAAG,KAAKV,QAAL,CAAcW,GAAd,EAAd;MACA,KAAKV,QAAL,CAAcI,IAAd,CAAmBK,OAAnB;MACA,IAAIE,GAAG,GAAG,IAAIC,KAAJ,EAAV;MACAD,GAAG,CAACE,GAAJ,GAAUJ,OAAV;;MACAE,GAAG,CAACG,MAAJ,GAAa,MAAM;QACfP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKjB,MAAL,CAAYkB,KAAhC,EAAuC,KAAKlB,MAAL,CAAYmB,MAAnD;QACAV,GAAG,CAACW,SAAJ,CAAcP,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKb,MAAL,CAAYkB,KAArC,EAA4C,KAAKlB,MAAL,CAAYmB,MAAxD;MAEH,CAJD;IAKH,CAVD,MAUO;MACHV,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKjB,MAAL,CAAYkB,KAAhC,EAAuC,KAAKlB,MAAL,CAAYmB,MAAnD;IACH;EACJ;;EAEDE,IAAI,GAAG,CAEN;;AAzCa;;AA4ClB,eAAe,IAAIvB,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}