{"ast":null,"code":"var _jsxFileName = \"/Users/vostrymikita/Developer/canvas-p/client/src/components/Canvas.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport '../styles/canvas.scss';\nimport { observer } from 'mobx-react-lite';\nimport { useEffect } from 'react';\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nimport Brush from '../tools/Brush';\nimport Rect from '../tools/Rect';\nimport { Modal, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Canvas = _s(observer(_c = _s(() => {\n  _s();\n\n  const canvasRef = useRef();\n  const usernameRef = useRef();\n  const [modal, setModal] = useState(true);\n  const params = useParams();\n  useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n    axios.get(`http://localhost:5000/image?id=${params.id}`).then(response => {\n      const img = new Image();\n      img.src = this.saved;\n\n      img.onload = () => {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.beginPath();\n        this.ctx.rect(x, y, w, h);\n        this.ctx.fill();\n        this.ctx.stroke();\n      };\n    });\n  }, []);\n  useEffect(() => {\n    if (canvasState.username) {\n      const socket = new WebSocket('ws://localhost:3007');\n      canvasState.setSocket(socket);\n      canvasState.setSessionId(params.id);\n      toolState.setTool(new Brush(canvasRef.current, socket, params.id));\n\n      socket.onopen = () => {\n        console.log('sadasdasdasd');\n        socket.send(JSON.stringify({\n          id: params.id,\n          username: canvasState.username,\n          method: 'connection'\n        }));\n      };\n\n      socket.onmessage = event => {\n        let msg = JSON.parse(event.data);\n\n        switch (msg.method) {\n          case 'connection':\n            console.log(`user ${msg.username} connected`);\n            break;\n\n          case 'draw':\n            drawHandler(msg);\n            break;\n\n          default:\n        }\n      };\n    }\n  }, [canvasState.username]);\n\n  const drawHandler = msg => {\n    const figure = msg.figure;\n    const ctx = canvasRef.current.getContext('2d');\n\n    switch (figure.type) {\n      case 'brush':\n        Brush.draw(ctx, figure.x, figure.y);\n        break;\n\n      case 'rect':\n        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color);\n        break;\n\n      case 'finish':\n        ctx.beginPath();\n        break;\n\n      default:\n    }\n  };\n\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n    axios.post(`http://localhost:3007/image?id=${params.id}`, {\n      img: canvasRef.current.toDataURL()\n    }).then(response => console.log(response.data));\n  };\n\n  const connectionHandler = () => {\n    canvasState.setUserName(usernameRef.current.value);\n    setModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: modal,\n      onHide: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: usernameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => connectionHandler(),\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      onMouseDown: () => mouseDownHandler(),\n      ref: canvasRef,\n      width: 600,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}, \"frpiFXrwApBwe8aIG91Eg0cuJTQ=\", false, function () {\n  return [useParams];\n})), \"frpiFXrwApBwe8aIG91Eg0cuJTQ=\", false, function () {\n  return [useParams];\n});\n\n_c2 = Canvas;\nexport default Canvas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useRef","useState","observer","useEffect","canvasState","toolState","Brush","Rect","Modal","Button","useParams","axios","Canvas","canvasRef","usernameRef","modal","setModal","params","setCanvas","current","get","id","then","response","img","Image","src","saved","onload","ctx","clearRect","canvas","width","height","drawImage","beginPath","rect","x","y","w","h","fill","stroke","username","socket","WebSocket","setSocket","setSessionId","setTool","onopen","console","log","send","JSON","stringify","method","onmessage","event","msg","parse","data","drawHandler","figure","getContext","type","draw","staticDraw","color","mouseDownHandler","pushToUndo","toDataURL","post","connectionHandler","setUserName","value"],"sources":["/Users/vostrymikita/Developer/canvas-p/client/src/components/Canvas.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport '../styles/canvas.scss'\nimport { observer } from 'mobx-react-lite'\nimport { useEffect } from 'react'\nimport canvasState from '../store/canvasState'\nimport toolState from '../store/toolState'\nimport Brush from '../tools/Brush'\nimport Rect from '../tools/Rect'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\n\nconst Canvas = observer(() => {\n\n    const canvasRef = useRef()\n    const usernameRef = useRef()\n    const [modal, setModal] = useState(true)\n    const params = useParams()\n\n    useEffect(() => {\n        canvasState.setCanvas(canvasRef.current)\n        axios.get(`http://localhost:5000/image?id=${params.id}`)\n            .then(response => {\n                const img = new Image()\n                img.src = this.saved\n                img.onload = () => {\n                    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n                    this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n                    this.ctx.beginPath()\n                    this.ctx.rect(x, y, w, h)\n                    this.ctx.fill()\n                    this.ctx.stroke()\n                }\n            })\n    }, [])\n\n    useEffect(() => {\n        if (canvasState.username) {\n            const socket = new WebSocket('ws://localhost:3007')\n            canvasState.setSocket(socket)\n            canvasState.setSessionId(params.id)\n            toolState.setTool(new Brush(canvasRef.current, socket, params.id))\n\n            socket.onopen = () => {\n                console.log('sadasdasdasd')\n                socket.send(JSON.stringify({\n                    id: params.id,\n                    username: canvasState.username,\n                    method: 'connection'\n                }))\n            }\n            socket.onmessage = (event) => {\n                let msg = JSON.parse(event.data)\n                switch (msg.method) {\n                    case 'connection':\n                        console.log(`user ${msg.username} connected`)\n                        break\n                    case 'draw':\n                        drawHandler(msg)\n                        break\n                    default:\n\n                }\n            }\n        }\n    }, [canvasState.username])\n\n    const drawHandler = (msg) => {\n        const figure = msg.figure\n        const ctx = canvasRef.current.getContext('2d')\n        switch (figure.type) {\n            case 'brush':\n                Brush.draw(ctx, figure.x, figure.y)\n                break\n            case 'rect':\n                Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color)\n                break\n            case 'finish':\n                ctx.beginPath()\n                break\n            default:\n\n        }\n    }\n\n    const mouseDownHandler = () => {\n        canvasState.pushToUndo(canvasRef.current.toDataURL())\n        axios.post(`http://localhost:3007/image?id=${params.id}`, { img: canvasRef.current.toDataURL() })\n            .then(response => console.log(response.data))\n    }\n\n    const connectionHandler = () => {\n        canvasState.setUserName(usernameRef.current.value)\n        setModal(false)\n    }\n\n    return (\n        <div className='canvas'>\n            <Modal show={modal} onHide={() => { }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Enter your name</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <input type='text' ref={usernameRef} />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => connectionHandler()}>\n                        Enter\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <canvas onMouseDown={() => mouseDownHandler()} ref={canvasRef} width={600} height={400} />\n        </div>\n    )\n})\n\nexport default Canvas"],"mappings":"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"},"metadata":{},"sourceType":"module"}